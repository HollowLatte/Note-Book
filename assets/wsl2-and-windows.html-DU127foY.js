import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as t,e as n}from"./app-CXUo51sk.js";const i={},s=n('<h2 id="网络互通" tabindex="-1"><a class="header-anchor" href="#网络互通"><span>网络互通</span></a></h2><p>Windows 访问 WSL2 启动的网络服务，可以直接使用 localhost，但是 Linux 访问 Windows 启动的网络服务这种方式就不行了。 例如：WSL2装了MySQL，Windows可以直接用<code>localhost:3306</code>访问，但是Windows装了MySQL，WSL2应该如何访问Windows的MySQL呢？</p><p>WSL2每次重启后会自动生成一些host，这些host存于/etc/hosts</p><p>其中，有一个host会始终指向Windows，即<code>host.docker.internal</code>，可以使用该host方法Windows上的服务</p><blockquote><p>WSL2访问win需要知道IP，可以使用如下脚本获取 Windows 的 IP： <code>ip route | grep default | awk &#39;{print $3}&#39;</code> 值得注意的是，每次重启Windows后，该IP会变化</p></blockquote><h2 id="文件系统互通" tabindex="-1"><a class="header-anchor" href="#文件系统互通"><span>文件系统互通</span></a></h2><p>WSL2 访问 Windows 文件系统依然通过挂载分区的方式，Windows 下的磁盘会被挂载在 /mnt 下，例如 /mnt/c。</p><p>而Windows 可以直接在此电脑中像访问C盘、D盘一样访问 Linux。但是会出现文件刷新不及时的问题，有时需要手动刷新才能看见</p><h3 id="结合windows-terminal使用" tabindex="-1"><a class="header-anchor" href="#结合windows-terminal使用"><span>结合Windows Terminal使用</span></a></h3><p>在WSL2中有一个<code>explorer.exe &lt;path&gt;</code>的命令，执行该命令后会使用Windows的文件管理器打开指定的WSL2的目录，传输文件十分方便</p><h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h2><p>安装原生Docker服务的方式，对于WSL可能是不太友好的，更加推荐使用Docker Desktop的方式</p><p>Windows可以通过Docker Desktop直接管理WSL2内的容器</p>',13),a=[s];function d(l,c){return e(),t("div",null,a)}const w=o(i,[["render",d],["__file","wsl2-and-windows.html.vue"]]),h=JSON.parse('{"path":"/practice-manual/windows/wsl2/wsl2-and-windows.html","title":"WSL2与Windows的操作","lang":"zh-CN","frontmatter":{"title":"WSL2与Windows的操作","category":"WSL2","tag":"WSL2","description":"网络互通 Windows 访问 WSL2 启动的网络服务，可以直接使用 localhost，但是 Linux 访问 Windows 启动的网络服务这种方式就不行了。 例如：WSL2装了MySQL，Windows可以直接用localhost:3306访问，但是Windows装了MySQL，WSL2应该如何访问Windows的MySQL呢？ WSL2每次重...","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/practice-manual/windows/wsl2/wsl2-and-windows.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"WSL2与Windows的操作"}],["meta",{"property":"og:description","content":"网络互通 Windows 访问 WSL2 启动的网络服务，可以直接使用 localhost，但是 Linux 访问 Windows 启动的网络服务这种方式就不行了。 例如：WSL2装了MySQL，Windows可以直接用localhost:3306访问，但是Windows装了MySQL，WSL2应该如何访问Windows的MySQL呢？ WSL2每次重..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-21T19:31:22.000Z"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"WSL2"}],["meta",{"property":"article:modified_time","content":"2024-03-21T19:31:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WSL2与Windows的操作\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-21T19:31:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"网络互通","slug":"网络互通","link":"#网络互通","children":[]},{"level":2,"title":"文件系统互通","slug":"文件系统互通","link":"#文件系统互通","children":[{"level":3,"title":"结合Windows Terminal使用","slug":"结合windows-terminal使用","link":"#结合windows-terminal使用","children":[]}]},{"level":2,"title":"Docker","slug":"docker","link":"#docker","children":[]}],"git":{"createdTime":1711049482000,"updatedTime":1711049482000,"contributors":[{"name":"hollowlatte","email":"hollowlatte@outlook.com","commits":1}]},"readingTime":{"minutes":1.23,"words":369},"filePathRelative":"practice-manual/windows/wsl2/wsl2-and-windows.md","localizedDate":"2024年3月21日","excerpt":"<h2>网络互通</h2>\\n<p>Windows 访问 WSL2 启动的网络服务，可以直接使用 localhost，但是 Linux 访问 Windows 启动的网络服务这种方式就不行了。\\n例如：WSL2装了MySQL，Windows可以直接用<code>localhost:3306</code>访问，但是Windows装了MySQL，WSL2应该如何访问Windows的MySQL呢？</p>\\n<p>WSL2每次重启后会自动生成一些host，这些host存于/etc/hosts</p>\\n<p>其中，有一个host会始终指向Windows，即<code>host.docker.internal</code>，可以使用该host方法Windows上的服务</p>","autoDesc":true}');export{w as comp,h as data};
