import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as s,e as t}from"./app-R-jbemKs.js";const e={},p=t(`<h2 id="快速入门" tabindex="-1"><a class="header-anchor" href="#快速入门" aria-hidden="true">#</a> 快速入门</h2><ol><li><strong>引入依赖</strong>：</li></ol><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.retry<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-retry<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p><strong>启动类启用Retryable</strong>： 启动类加上<code>@EnableRetry</code></p></li><li><p><strong>将@Retryable添加到想要失败重试的方法上</strong>：</p></li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Retryable</span><span class="token punctuation">(</span>retryFor <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">EsException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">,</span> maxAttempts <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> backoff <span class="token operator">=</span> <span class="token annotation punctuation">@Backoff</span><span class="token punctuation">(</span><span class="token number">500L</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="retryable常用参数" tabindex="-1"><a class="header-anchor" href="#retryable常用参数" aria-hidden="true">#</a> @Retryable常用参数</h2><ul><li>retryFor/include：需要重试的异常，<strong>一定要配置，因为该值默认为空</strong></li><li>maxAttempts：最大重试次数</li><li>backoff：配置重试间隔、重试延迟时间等</li></ul><h2 id="retryable不生效" tabindex="-1"><a class="header-anchor" href="#retryable不生效" aria-hidden="true">#</a> @Retryable不生效</h2><ol><li>异常类型未被包含，需要确认方法抛出的异常与@Retryable中include是不是同一个Exception</li><li>方法不是public，@Retryable默认只作用于public方法上,如果方法不是public则需要额外指定interceptors。</li><li>异常被吞没未抛出</li></ol>`,9),o=[p];function l(c,i){return n(),s("div",null,o)}const d=a(e,[["render",l],["__file","retryable.html.vue"]]);export{d as default};
