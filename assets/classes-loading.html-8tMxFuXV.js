const t=JSON.parse('{"key":"v-4bf94b38","path":"/notebook/java/jvm/classes-loading.html","title":"类加载","lang":"zh-CN","frontmatter":{"title":"类加载","author":null,"category":"JVM","tag":"JVM","description":"Java中类的加载阶段分为加载、链接、初始化。其中连接过程又包含了验证、准备和解析。 加载阶段 查找并加载类的二进制数据(网络，jar包，运行时生成等) 。将类的.class文件中的二进制数据读入内存中，将其放在元空间（方法区）中，然后创建一个java.lang.Class对象（存放在堆中）用来封装类在方法区的数据结构 链接阶段 在链接阶段，Java类加载器对类进行验证、准备和解析操作。将类与类的关系（符号引用转为直接引用）确定好，校验字节码 验证：校验类的正确性（文件格式，元数据，字节码，二进制兼容性） 准备：为类的静态变量分配内存，将其初始化为默认值。但是在到达初始化之前，类变量都没有初始化为真正的初始值。当然，对于final修饰的变量来说，会在此时就被初始化为指定值 解析：把类的符号引用转为直接引用(类或接口、字段、类方法、接口方法、方法类型、方法句柄和访问控制修饰符7类符号引用 )","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/notebook/java/jvm/classes-loading.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"类加载"}],["meta",{"property":"og:description","content":"Java中类的加载阶段分为加载、链接、初始化。其中连接过程又包含了验证、准备和解析。 加载阶段 查找并加载类的二进制数据(网络，jar包，运行时生成等) 。将类的.class文件中的二进制数据读入内存中，将其放在元空间（方法区）中，然后创建一个java.lang.Class对象（存放在堆中）用来封装类在方法区的数据结构 链接阶段 在链接阶段，Java类加载器对类进行验证、准备和解析操作。将类与类的关系（符号引用转为直接引用）确定好，校验字节码 验证：校验类的正确性（文件格式，元数据，字节码，二进制兼容性） 准备：为类的静态变量分配内存，将其初始化为默认值。但是在到达初始化之前，类变量都没有初始化为真正的初始值。当然，对于final修饰的变量来说，会在此时就被初始化为指定值 解析：把类的符号引用转为直接引用(类或接口、字段、类方法、接口方法、方法类型、方法句柄和访问控制修饰符7类符号引用 )"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"JVM"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类加载\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"加载阶段","slug":"加载阶段","link":"#加载阶段","children":[]},{"level":2,"title":"链接阶段","slug":"链接阶段","link":"#链接阶段","children":[]},{"level":2,"title":"初始化阶段","slug":"初始化阶段","link":"#初始化阶段","children":[]},{"level":2,"title":"什么时候会被加载？","slug":"什么时候会被加载","link":"#什么时候会被加载","children":[]}],"git":{},"readingTime":{"minutes":3.37,"words":1012},"filePathRelative":"notebook/java/jvm/classes-loading.md","excerpt":"<p>Java中类的加载阶段分为加载、链接、初始化。其中连接过程又包含了验证、准备和解析。</p>\\n<h2> 加载阶段</h2>\\n<p>查找并加载类的二进制数据(网络，jar包，运行时生成等)\\n。将类的.class文件中的二进制数据读入内存中，将其放在元空间（方法区）中，然后创建一个java.lang.Class对象（存放在堆中）用来封装类在方法区的数据结构</p>\\n<h2> 链接阶段</h2>\\n<p>在链接阶段，Java类加载器对类进行验证、准备和解析操作。将类与类的关系（符号引用转为直接引用）确定好，校验字节码</p>\\n<ol>\\n<li>\\n<p>验证：校验类的正确性（文件格式，元数据，字节码，二进制兼容性）</p>\\n</li>\\n<li>\\n<p>准备：为类的静态变量分配内存，将其初始化为默认值。但是在到达初始化之前，类变量都没有初始化为真正的初始值。当然，对于final修饰的变量来说，会在此时就被初始化为指定值</p>\\n</li>\\n<li>\\n<p>解析：把类的符号引用转为直接引用(类或接口、字段、类方法、接口方法、方法类型、方法句柄和访问控制修饰符7类符号引用 )</p>\\n</li>\\n</ol>","autoDesc":true}');export{t as data};
