const e=JSON.parse('{"key":"v-3e62c295","path":"/notebook/redis/streams/stream-config.html","title":"Stream 配置","lang":"zh-CN","frontmatter":{"title":"Stream 配置","author":null,"category":"Redis","tag":"Redis","date":"2024-01-25T00:00:00.000Z","description":"可以通过stream-node-max-bytes参数修改Stream中每个宏节点（Macro Node）能够占用的最大内存，或者通过stream-node-max-entries参数指定每个宏节点中可存储条目的最大数量。 Redis Streams与宏节点 Redis Streams是一些由基数树（Radix Tree）连接在一起的节点经过delta压缩后构成的，这些节点与Stream中的消息条目（Stream Entry）并非一一对应，而是每个节点中都存储着若干Stream条目，因此这些节点也被称为宏节点或大节点。这样的数据结构为访问随机元素、访问指定范围内的多个元素、实现定长Stream等操作提供了高效的支持，同时具有极高的内存利用率。","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/notebook/redis/streams/stream-config.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"Stream 配置"}],["meta",{"property":"og:description","content":"可以通过stream-node-max-bytes参数修改Stream中每个宏节点（Macro Node）能够占用的最大内存，或者通过stream-node-max-entries参数指定每个宏节点中可存储条目的最大数量。 Redis Streams与宏节点 Redis Streams是一些由基数树（Radix Tree）连接在一起的节点经过delta压缩后构成的，这些节点与Stream中的消息条目（Stream Entry）并非一一对应，而是每个节点中都存储着若干Stream条目，因此这些节点也被称为宏节点或大节点。这样的数据结构为访问随机元素、访问指定范围内的多个元素、实现定长Stream等操作提供了高效的支持，同时具有极高的内存利用率。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2024-01-25T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Stream 配置\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-25T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"Redis Streams与宏节点","slug":"redis-streams与宏节点","link":"#redis-streams与宏节点","children":[]},{"level":2,"title":"典型应用场景","slug":"典型应用场景","link":"#典型应用场景","children":[]}],"git":{},"readingTime":{"minutes":3.51,"words":1053},"filePathRelative":"notebook/redis/streams/stream-config.md","localizedDate":"2024年1月25日","excerpt":"<p>可以通过stream-node-max-bytes参数修改Stream中每个宏节点（Macro\\nNode）能够占用的最大内存，或者通过stream-node-max-entries参数指定每个宏节点中可存储条目的最大数量。</p>\\n<h2> Redis Streams与宏节点</h2>\\n<p>Redis Streams是一些由基数树（Radix Tree）连接在一起的节点经过delta压缩后构成的，这些节点与Stream中的消息条目（Stream\\nEntry）并非一一对应，而是每个节点中都存储着若干Stream条目，因此这些节点也被称为宏节点或大节点。这样的数据结构为访问随机元素、访问指定范围内的多个元素、实现定长Stream等操作提供了高效的支持，同时具有极高的内存利用率。</p>","autoDesc":true}');export{e as data};
