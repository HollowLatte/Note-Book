import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as a,e as n}from"./app-CjdU_M7_.js";const s={},o=n(`<h2 id="索引别名特点" tabindex="-1"><a class="header-anchor" href="#索引别名特点"><span>索引别名特点</span></a></h2><ul><li>一个别名可以指向一个或多个索引,一个索引也可以被多个别名指向。</li><li>别名被设计用来应对索引的创建、删除和重命名,使引用变得更方便。</li><li>别名可以动态地指向不同的索引,也就是说即使索引名称改变,使用别名的代码不需要修改。</li></ul><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h2><p>当需要按照日期变更创建索引时，使用template和别名结合便可以轻松实现。</p><h2 id="别名无法使用的情况" tabindex="-1"><a class="header-anchor" href="#别名无法使用的情况"><span>别名无法使用的情况</span></a></h2><p>例如现在有两个索引user-202305、user-202306，两个索引的别名都是user</p><p>当查询数据时设置查询的索引名称为user时是没有问题的，ES会去user-202305、user-202306中查询数据</p><p>但是，当使用别名user去新增、修改、删除Document时，默认情况下会有以下异常</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>no write index is defined <span class="token keyword">for</span> alias <span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">.</span> <span class="token class-name">The</span> write index may be explicitly disabled using is_write_index<span class="token operator">=</span><span class="token boolean">false</span> or the alias points <span class="token keyword">to</span> <span class="token namespace">multiple</span> indices without one being designated as a write index
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>因此，默认情况下是不可以使用索引的别名进行写数据等操作的。不过大部分情况下索引的别名都只用来搜索，所以不用特别设置</p>`,10),i=[o];function l(r,p){return t(),a("div",null,i)}const h=e(s,[["render",l],["__file","index-alias.html.vue"]]),u=JSON.parse('{"path":"/notebook/elasticsearch/index/index-alias.html","title":"索引别名alias","lang":"zh-CN","frontmatter":{"title":"索引别名alias","author":null,"category":"Elasticsearch","tag":"Elasticsearch","description":"索引别名特点 一个别名可以指向一个或多个索引,一个索引也可以被多个别名指向。 别名被设计用来应对索引的创建、删除和重命名,使引用变得更方便。 别名可以动态地指向不同的索引,也就是说即使索引名称改变,使用别名的代码不需要修改。 使用场景 当需要按照日期变更创建索引时，使用template和别名结合便可以轻松实现。 别名无法使用的情况 例如现在有两个索引u...","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/notebook/elasticsearch/index/index-alias.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"索引别名alias"}],["meta",{"property":"og:description","content":"索引别名特点 一个别名可以指向一个或多个索引,一个索引也可以被多个别名指向。 别名被设计用来应对索引的创建、删除和重命名,使引用变得更方便。 别名可以动态地指向不同的索引,也就是说即使索引名称改变,使用别名的代码不需要修改。 使用场景 当需要按照日期变更创建索引时，使用template和别名结合便可以轻松实现。 别名无法使用的情况 例如现在有两个索引u..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-21T08:07:11.000Z"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Elasticsearch"}],["meta",{"property":"article:modified_time","content":"2024-03-21T08:07:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"索引别名alias\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-21T08:07:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"索引别名特点","slug":"索引别名特点","link":"#索引别名特点","children":[]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"别名无法使用的情况","slug":"别名无法使用的情况","link":"#别名无法使用的情况","children":[]}],"git":{"createdTime":1711008431000,"updatedTime":1711008431000,"contributors":[{"name":"hollowlatte","email":"hollowlatte@outlook.com","commits":1}]},"readingTime":{"minutes":1.1,"words":330},"filePathRelative":"notebook/elasticsearch/index/index-alias.md","localizedDate":"2024年3月21日","excerpt":"<h2>索引别名特点</h2>\\n<ul>\\n<li>一个别名可以指向一个或多个索引,一个索引也可以被多个别名指向。</li>\\n<li>别名被设计用来应对索引的创建、删除和重命名,使引用变得更方便。</li>\\n<li>别名可以动态地指向不同的索引,也就是说即使索引名称改变,使用别名的代码不需要修改。</li>\\n</ul>\\n<h2>使用场景</h2>\\n<p>当需要按照日期变更创建索引时，使用template和别名结合便可以轻松实现。</p>\\n<h2>别名无法使用的情况</h2>\\n<p>例如现在有两个索引user-202305、user-202306，两个索引的别名都是user</p>\\n<p>当查询数据时设置查询的索引名称为user时是没有问题的，ES会去user-202305、user-202306中查询数据</p>","autoDesc":true}');export{h as comp,u as data};
