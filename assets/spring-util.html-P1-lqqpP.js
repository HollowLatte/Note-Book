const n=JSON.parse('{"key":"v-4e26c914","path":"/practice-manual/java/spring-util.html","title":"Spring工具类","lang":"zh-CN","frontmatter":{"title":"Spring工具类","author":null,"category":"Java","tag":"Java","description":"Spring内置 AopUtils // 判断是不是 Spring 代理对象 boolean isAopProxy() // 判断是不是 jdk 动态代理对象 boolean isJdkDynamicProxy() // 判断是不是 CGLIB 代理对象 boolean isCglibProxy() // 获取被代理的目标 class Class&lt;?&gt; getTargetClass()","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/practice-manual/java/spring-util.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"Spring工具类"}],["meta",{"property":"og:description","content":"Spring内置 AopUtils // 判断是不是 Spring 代理对象 boolean isAopProxy() // 判断是不是 jdk 动态代理对象 boolean isJdkDynamicProxy() // 判断是不是 CGLIB 代理对象 boolean isCglibProxy() // 获取被代理的目标 class Class&lt;?&gt; getTargetClass()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Java"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring工具类\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"Spring内置","slug":"spring内置","link":"#spring内置","children":[{"level":3,"title":"AopUtils","slug":"aoputils","link":"#aoputils","children":[]},{"level":3,"title":"AopContext","slug":"aopcontext","link":"#aopcontext","children":[]}]}],"git":{},"readingTime":{"minutes":0.28,"words":84},"filePathRelative":"practice-manual/java/spring-util.md","excerpt":"<h2> Spring内置</h2>\\n<h3> AopUtils</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 判断是不是 Spring 代理对象</span>\\n<span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">isAopProxy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 判断是不是 jdk 动态代理对象</span>\\n<span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">isJdkDynamicProxy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 判断是不是 CGLIB 代理对象</span>\\n<span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">isCglibProxy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 获取被代理的目标 class</span>\\n<span class=\\"token class-name\\">Class</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token operator\\">?</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">getTargetClass</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
