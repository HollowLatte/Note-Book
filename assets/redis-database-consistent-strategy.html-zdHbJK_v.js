const e=JSON.parse('{"key":"v-80355c08","path":"/notebook/redis/redis-database-consistent-strategy.html","title":"Redis与数据库一致性策略","lang":"zh-CN","frontmatter":{"title":"Redis与数据库一致性策略","author":null,"category":"Redis","tag":"Redis","description":"有4种常见的策略，但是一般Cache Aside的方式是大多数场景下的常用方案，Cache Aside有又三种方式(变体)来处理缓存/数据库 Cache Aside Cache Aside的三种变体都面临两个问题，删除缓存还是更新缓存？先删缓存还是后删缓存？ 删除还是更新缓存？ 首先，删除缓存是比较好的做法。 因为更新缓存的动作，相比于直接删除缓存，操作过程比较的复杂，而且也容易出错。通常缓存业务的一些数据时，都是以JSON的格式放到Redis中，那如果更新缓存的话还需要将该JSON反序列化，然后更新其中的信息，然后再序列化放回Redis，相比于删除操作复杂了很多","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/notebook/redis/redis-database-consistent-strategy.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"Redis与数据库一致性策略"}],["meta",{"property":"og:description","content":"有4种常见的策略，但是一般Cache Aside的方式是大多数场景下的常用方案，Cache Aside有又三种方式(变体)来处理缓存/数据库 Cache Aside Cache Aside的三种变体都面临两个问题，删除缓存还是更新缓存？先删缓存还是后删缓存？ 删除还是更新缓存？ 首先，删除缓存是比较好的做法。 因为更新缓存的动作，相比于直接删除缓存，操作过程比较的复杂，而且也容易出错。通常缓存业务的一些数据时，都是以JSON的格式放到Redis中，那如果更新缓存的话还需要将该JSON反序列化，然后更新其中的信息，然后再序列化放回Redis，相比于删除操作复杂了很多"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Redis"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis与数据库一致性策略\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"Cache Aside","slug":"cache-aside","link":"#cache-aside","children":[{"level":3,"title":"删除还是更新缓存？","slug":"删除还是更新缓存","link":"#删除还是更新缓存","children":[]},{"level":3,"title":"先更新数据库后删缓存","slug":"先更新数据库后删缓存","link":"#先更新数据库后删缓存","children":[]},{"level":3,"title":"先删缓存后更新数据库","slug":"先删缓存后更新数据库","link":"#先删缓存后更新数据库","children":[]},{"level":3,"title":"延迟双删","slug":"延迟双删","link":"#延迟双删","children":[]}]},{"level":2,"title":"Read/Write Through","slug":"read-write-through","link":"#read-write-through","children":[{"level":3,"title":"Read Through","slug":"read-through","link":"#read-through","children":[]},{"level":3,"title":"Write Through","slug":"write-through","link":"#write-through","children":[]}]},{"level":2,"title":"Write Behind","slug":"write-behind","link":"#write-behind","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":2.82,"words":845},"filePathRelative":"notebook/redis/redis-database-consistent-strategy.md","excerpt":"<p>有4种常见的策略，但是一般Cache Aside的方式是大多数场景下的常用方案，Cache Aside有又三种方式(变体)来处理缓存/数据库</p>\\n<h2> Cache Aside</h2>\\n<p>Cache Aside的三种变体都面临两个问题，删除缓存还是更新缓存？先删缓存还是后删缓存？</p>\\n<h3> 删除还是更新缓存？</h3>\\n<p>首先，删除缓存是比较好的做法。</p>\\n<p>因为更新缓存的动作，相比于直接删除缓存，操作过程比较的复杂，而且也容易出错。通常缓存业务的一些数据时，都是以JSON的格式放到Redis中，那如果更新缓存的话还需要将该JSON反序列化，然后更新其中的信息，然后再序列化放回Redis，相比于删除操作复杂了很多</p>","autoDesc":true}');export{e as data};
