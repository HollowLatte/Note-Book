import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,e as t}from"./app-R-jbemKs.js";const e={},p=t(`<h2 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h2><p>jstack用于生成java虚拟机当前时刻的线程快照。</p><p>生成线程快照的主要目的是定位线程出现长时间停顿的原因，如线程间死锁、死循环、请求外部资源导致的长时间等待等。</p><p>线程出现停顿的时候通过jstack来查看各个线程的调用堆栈，就可以知道没有响应的线程到底在后台做什么事情，或者等待什么资源。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p><strong>jstack的帮助信息如下</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Usage:
    jstack <span class="token punctuation">[</span>-l<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pid<span class="token operator">&gt;</span>
        <span class="token punctuation">(</span>to connect to running process<span class="token punctuation">)</span>
    jstack <span class="token parameter variable">-F</span> <span class="token punctuation">[</span>-m<span class="token punctuation">]</span> <span class="token punctuation">[</span>-l<span class="token punctuation">]</span> <span class="token operator">&lt;</span>pid<span class="token operator">&gt;</span>
        <span class="token punctuation">(</span>to connect to a hung process<span class="token punctuation">)</span>
    jstack <span class="token punctuation">[</span>-m<span class="token punctuation">]</span> <span class="token punctuation">[</span>-l<span class="token punctuation">]</span> <span class="token operator">&lt;</span>executable<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>core<span class="token operator">&gt;</span>
        <span class="token punctuation">(</span>to connect to a core <span class="token function">file</span><span class="token punctuation">)</span>
    jstack <span class="token punctuation">[</span>-m<span class="token punctuation">]</span> <span class="token punctuation">[</span>-l<span class="token punctuation">]</span> <span class="token punctuation">[</span>server_id@<span class="token punctuation">]</span><span class="token operator">&lt;</span>remote server IP or hostname<span class="token operator">&gt;</span>
        <span class="token punctuation">(</span>to connect to a remote debug server<span class="token punctuation">)</span>

Options:
    <span class="token parameter variable">-F</span>  to force a thread dump. Use when jstack <span class="token operator">&lt;</span>pid<span class="token operator">&gt;</span> does not respond <span class="token punctuation">(</span>process is hung<span class="token punctuation">)</span>
    <span class="token parameter variable">-m</span>  to print both <span class="token function">java</span> and native frames <span class="token punctuation">(</span>mixed mode<span class="token punctuation">)</span>
    <span class="token parameter variable">-l</span>  long listing. Prints additional information about locks
    <span class="token parameter variable">-h</span> or <span class="token parameter variable">-help</span> to print this <span class="token builtin class-name">help</span> message
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一般先用jps找出对应应用的pid，然后在通过jstack进行操作</p><p>对于运行中的应用，使用<code>jstack -l [pid]</code></p><ul><li>l：长列表. 打印关于锁的附加信息,例如属于java.util.concurrent的ownable synchronizers列表.</li><li>m：打印java和native c/c++框架的所有栈信息</li><li>F：当<code>jstack -l pid</code>没有响应的时候强制打印栈信息</li></ul>`,10),o=[p];function c(i,l){return a(),s("div",null,o)}const d=n(e,[["render",c],["__file","jstack.html.vue"]]);export{d as default};
