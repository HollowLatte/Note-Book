const t=JSON.parse('{"key":"v-2c946540","path":"/practice-manual/java/stream/stream-sort.html","title":"Stream排序","lang":"zh-CN","frontmatter":{"title":"Stream排序","author":null,"category":"Java","tag":"Java","description":"方法 sorted方法有两个重载： Stream&lt;T&gt; sorted()：默认使用自然序排序， 被排序的元素必须实现Comparable接口 Stream&lt;T&gt; sorted(Comparator&lt;? super T&gt; comparator)：通过Comparator进行排序 Comparable排序 // 根据实现的Comparable排序一个list list.stream().sorted() // 根据实现的Comparable逆序排序一个list list.stream().sorted(Comparator.reverseOrder())","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/practice-manual/java/stream/stream-sort.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"Stream排序"}],["meta",{"property":"og:description","content":"方法 sorted方法有两个重载： Stream&lt;T&gt; sorted()：默认使用自然序排序， 被排序的元素必须实现Comparable接口 Stream&lt;T&gt; sorted(Comparator&lt;? super T&gt; comparator)：通过Comparator进行排序 Comparable排序 // 根据实现的Comparable排序一个list list.stream().sorted() // 根据实现的Comparable逆序排序一个list list.stream().sorted(Comparator.reverseOrder())"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Java"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Stream排序\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[]},{"level":2,"title":"Comparable排序","slug":"comparable排序","link":"#comparable排序","children":[]},{"level":2,"title":"单字段排序","slug":"单字段排序","link":"#单字段排序","children":[]},{"level":2,"title":"多字段排序","slug":"多字段排序","link":"#多字段排序","children":[]},{"level":2,"title":"Map排序","slug":"map排序","link":"#map排序","children":[]}],"git":{},"readingTime":{"minutes":0.86,"words":257},"filePathRelative":"practice-manual/java/stream/stream-sort.md","excerpt":"<h2> 方法</h2>\\n<p>sorted方法有两个重载：</p>\\n<ul>\\n<li><code>Stream&lt;T&gt; sorted()</code>：默认使用自然序排序， 被排序的元素必须实现Comparable接口</li>\\n<li><code>Stream&lt;T&gt; sorted(Comparator&lt;? super T&gt; comparator)</code>：通过Comparator进行排序</li>\\n</ul>\\n<h2> Comparable排序</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 根据实现的Comparable排序一个list</span>\\nlist<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stream</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sorted</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 根据实现的Comparable逆序排序一个list</span>\\nlist<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stream</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sorted</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Comparator</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reverseOrder</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
