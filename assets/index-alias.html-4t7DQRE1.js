import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,e as n}from"./app-R-jbemKs.js";const i={},t=n(`<h2 id="索引别名特点" tabindex="-1"><a class="header-anchor" href="#索引别名特点" aria-hidden="true">#</a> 索引别名特点</h2><ul><li>一个别名可以指向一个或多个索引,一个索引也可以被多个别名指向。</li><li>别名被设计用来应对索引的创建、删除和重命名,使引用变得更方便。</li><li>别名可以动态地指向不同的索引,也就是说即使索引名称改变,使用别名的代码不需要修改。</li></ul><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><p>当需要按照日期变更创建索引时，使用template和别名结合便可以轻松实现。</p><h2 id="别名无法使用的情况" tabindex="-1"><a class="header-anchor" href="#别名无法使用的情况" aria-hidden="true">#</a> 别名无法使用的情况</h2><p>例如现在有两个索引user-202305、user-202306，两个索引的别名都是user</p><p>当查询数据时设置查询的索引名称为user时是没有问题的，ES会去user-202305、user-202306中查询数据</p><p>但是，当使用别名user去新增、修改、删除Document时，默认情况下会有以下异常</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>no write index is defined <span class="token keyword">for</span> alias <span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">.</span> <span class="token class-name">The</span> write index may be explicitly disabled using is_write_index<span class="token operator">=</span><span class="token boolean">false</span> or the alias points <span class="token keyword">to</span> <span class="token namespace">multiple</span> indices without one being designated as a write index
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>因此，默认情况下是不可以使用索引的别名进行写数据等操作的。不过大部分情况下索引的别名都只用来搜索，所以不用特别设置</p>`,10),r=[t];function l(o,d){return a(),s("div",null,r)}const u=e(i,[["render",l],["__file","index-alias.html.vue"]]);export{u as default};
