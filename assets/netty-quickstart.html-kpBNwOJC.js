const n=JSON.parse('{"key":"v-26c3ff51","path":"/notebook/netty/netty-quickstart.html","title":"Netty快速入门","lang":"zh-CN","frontmatter":{"title":"Netty快速入门","author":null,"category":"Netty","tag":"Netty","date":"2024-03-14T00:00:00.000Z","description":"以一个可以接收字符并回写字符的Netty Server为例 Server public class StringNettyServer { public static void main(String[] args) throws InterruptedException { EventLoopGroup bossGroup = new NioEventLoopGroup(1); // (1) EventLoopGroup workerGroup = new NioEventLoopGroup(NettyRuntime.availableProcessors()); ServerBootstrap serverBootstrap = new ServerBootstrap(); // (2) serverBootstrap.group(bossGroup, workerGroup) // (3) .channel(NioServerSocketChannel.class) // (4) .option(ChannelOption.SO_BACKLOG, 1024) // (5) .childOption(ChannelOption.SO_KEEPALIVE, true) // (6) .handler(new LoggingHandler(LogLevel.INFO)) // (7) .childHandler(new ChannelInitializer&lt;&gt;() { // (8) @Override protected void initChannel(Channel ch) throws Exception { ChannelPipeline pipeline = ch.pipeline(); // (9) pipeline.addLast(new StringDecoder()); pipeline.addLast(new StringEncoder()); pipeline.addLast(new StringHandler()); } }) ; serverBootstrap.bind(9000).sync(); } }","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/notebook/netty/netty-quickstart.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"Netty快速入门"}],["meta",{"property":"og:description","content":"以一个可以接收字符并回写字符的Netty Server为例 Server public class StringNettyServer { public static void main(String[] args) throws InterruptedException { EventLoopGroup bossGroup = new NioEventLoopGroup(1); // (1) EventLoopGroup workerGroup = new NioEventLoopGroup(NettyRuntime.availableProcessors()); ServerBootstrap serverBootstrap = new ServerBootstrap(); // (2) serverBootstrap.group(bossGroup, workerGroup) // (3) .channel(NioServerSocketChannel.class) // (4) .option(ChannelOption.SO_BACKLOG, 1024) // (5) .childOption(ChannelOption.SO_KEEPALIVE, true) // (6) .handler(new LoggingHandler(LogLevel.INFO)) // (7) .childHandler(new ChannelInitializer&lt;&gt;() { // (8) @Override protected void initChannel(Channel ch) throws Exception { ChannelPipeline pipeline = ch.pipeline(); // (9) pipeline.addLast(new StringDecoder()); pipeline.addLast(new StringEncoder()); pipeline.addLast(new StringHandler()); } }) ; serverBootstrap.bind(9000).sync(); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Netty"}],["meta",{"property":"article:published_time","content":"2024-03-14T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Netty快速入门\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-14T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"Server","slug":"server","link":"#server","children":[]},{"level":2,"title":"Handler","slug":"handler","link":"#handler","children":[]}],"git":{},"readingTime":{"minutes":2.97,"words":891},"filePathRelative":"notebook/netty/netty-quickstart.md","localizedDate":"2024年3月14日","excerpt":"<p>以一个可以接收字符并回写字符的Netty Server为例</p>\\n<h2> Server</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">StringNettyServer</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">InterruptedException</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">EventLoopGroup</span> bossGroup <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">NioEventLoopGroup</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// (1)</span>\\n        <span class=\\"token class-name\\">EventLoopGroup</span> workerGroup <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">NioEventLoopGroup</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">NettyRuntime</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">availableProcessors</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> \\n\\n        <span class=\\"token class-name\\">ServerBootstrap</span> serverBootstrap <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ServerBootstrap</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// (2)</span>\\n        serverBootstrap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">group</span><span class=\\"token punctuation\\">(</span>bossGroup<span class=\\"token punctuation\\">,</span> workerGroup<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// (3)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">channel</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">NioServerSocketChannel</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// (4)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">option</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ChannelOption</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">SO_BACKLOG</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1024</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// (5)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">childOption</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ChannelOption</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">SO_KEEPALIVE</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// (6)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">handler</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">LoggingHandler</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">LogLevel</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">INFO</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// (7)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">childHandler</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ChannelInitializer</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token comment\\">// (8)</span>\\n                    <span class=\\"token annotation punctuation\\">@Override</span>\\n                    <span class=\\"token keyword\\">protected</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">initChannel</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Channel</span> ch<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">Exception</span> <span class=\\"token punctuation\\">{</span>\\n                        <span class=\\"token class-name\\">ChannelPipeline</span> pipeline <span class=\\"token operator\\">=</span> ch<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pipeline</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// (9)</span>\\n                        pipeline<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addLast</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">StringDecoder</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                        pipeline<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addLast</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">StringEncoder</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                        pipeline<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addLast</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">StringHandler</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token punctuation\\">}</span>\\n                <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">;</span>\\n        serverBootstrap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">9000</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sync</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
