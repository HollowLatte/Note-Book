import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o,c as a,a as t}from"./app-4HbIzINy.js";const n={},l=t("h2",{id:"简介",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#简介"},[t("span",null,"简介")])],-1),r=t("p",null,"AQS(AbstractQueuedSynchronizer) 抽象队列同步器，AQS 是很多同步器的基础框架，比如 ReentrantLock、CountDownLatch 和 Semaphore 等都是基于 AQS 实现的。除此之外，我们还可以基于 AQS，定制出我们所需要的同步器。",-1),i=t("p",null,[t("strong",null,"关键点：")],-1),c=t("ul",null,[t("li",null,"在AQS内部，维护了一个FIFO队列和一个volatile的int类型的state变量。"),t("li",null,"在state=1的时候表示当前对象锁已经被占有了，state变量的值修改的动作通过CAS来完成。"),t("li",null,"FIFO队列用来实现多线程的排队工作，当线程加锁失败时，该线程会被封装成一个Node节点来置于队列尾部。"),t("li",null,"当持有锁的线程释放锁时，AQS会将等待队列中的第一个线程唤醒，并让其重新尝试获取锁。")],-1),s=[l,r,i,c];function p(h,m){return o(),a("div",null,s)}const S=e(n,[["render",p],["__file","aqs-simple.html.vue"]]),A=JSON.parse('{"path":"/interview-shorthand/java/concurrence/aqs-simple.html","title":"AQS","lang":"zh-CN","frontmatter":{"title":"AQS","author":null,"category":"Java","tag":"Java","date":"2024-01-14T00:00:00.000Z","description":"简介 AQS(AbstractQueuedSynchronizer) 抽象队列同步器，AQS 是很多同步器的基础框架，比如 ReentrantLock、CountDownLatch 和 Semaphore 等都是基于 AQS 实现的。除此之外，我们还可以基于 AQS，定制出我们所需要的同步器。 关键点： 在AQS内部，维护了一个FIFO队列和一个vol...","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/interview-shorthand/java/concurrence/aqs-simple.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"AQS"}],["meta",{"property":"og:description","content":"简介 AQS(AbstractQueuedSynchronizer) 抽象队列同步器，AQS 是很多同步器的基础框架，比如 ReentrantLock、CountDownLatch 和 Semaphore 等都是基于 AQS 实现的。除此之外，我们还可以基于 AQS，定制出我们所需要的同步器。 关键点： 在AQS内部，维护了一个FIFO队列和一个vol..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-26T15:40:23.000Z"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2024-01-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-26T15:40:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AQS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-26T15:40:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]}],"git":{"createdTime":1711467623000,"updatedTime":1711467623000,"contributors":[{"name":"hollowlatte","email":"hollowlatte@outlook.com","commits":1}]},"readingTime":{"minutes":0.72,"words":215},"filePathRelative":"interview-shorthand/java/concurrence/aqs-simple.md","localizedDate":"2024年1月14日","excerpt":"<h2>简介</h2>\\n<p>AQS(AbstractQueuedSynchronizer) 抽象队列同步器，AQS 是很多同步器的基础框架，比如 ReentrantLock、CountDownLatch 和 Semaphore\\n等都是基于 AQS 实现的。除此之外，我们还可以基于 AQS，定制出我们所需要的同步器。</p>\\n<p><strong>关键点：</strong></p>\\n<ul>\\n<li>在AQS内部，维护了一个FIFO队列和一个volatile的int类型的state变量。</li>\\n<li>在state=1的时候表示当前对象锁已经被占有了，state变量的值修改的动作通过CAS来完成。</li>\\n<li>FIFO队列用来实现多线程的排队工作，当线程加锁失败时，该线程会被封装成一个Node节点来置于队列尾部。</li>\\n<li>当持有锁的线程释放锁时，AQS会将等待队列中的第一个线程唤醒，并让其重新尝试获取锁。</li>\\n</ul>","autoDesc":true}');export{S as comp,A as data};
