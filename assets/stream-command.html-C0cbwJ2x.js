import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as a,e as l}from"./app-QXbWND43.js";const i={},s=l(`<h2 id="命令说明" tabindex="-1"><a class="header-anchor" href="#命令说明"><span>命令说明</span></a></h2><ul><li>XACK：结束Pending，将消息标记为&quot;已处理&quot;</li><li>XADD：生成消息</li><li>XCLAIM：转移消息的归属权</li><li>XDEL：删除消息</li><li>XGROUP：消费组管理</li><li>XINFO：查看流和消费者组的相关信息</li><li>XLEN：消息队列长度</li><li>XPENDING：Pending列表，显示待处理消息的相关信息</li><li>XRANGE：获取消息队列中消息</li><li>XREAD：消费消息</li><li>XREADGROUP：分组消费消息</li><li>XREVRANGE：逆序获取消息队列中消息</li><li>XTRIM：消息队列容量</li></ul><h2 id="quickstart-无消费组" tabindex="-1"><a class="header-anchor" href="#quickstart-无消费组"><span>QuickStart-无消费组</span></a></h2><h3 id="创建stream" tabindex="-1"><a class="header-anchor" href="#创建stream"><span>创建Stream</span></a></h3><p>首次添加消息时，自动创建</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>xadd stream_key * key1 value1 key2 value2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数说明：</p><ul><li><code>*</code>：表示Redis自动生成消息ID</li><li><code>key1 value1 key2 value2</code>：表示一条消息的消息体内的key-value对</li></ul><blockquote><p>生成的消息ID的格式为毫秒时间戳+序号</p></blockquote><h3 id="查看stream信息" tabindex="-1"><a class="header-anchor" href="#查看stream信息"><span>查看Stream信息</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>xinfo stream stream_key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="读取stream消息" tabindex="-1"><a class="header-anchor" href="#读取stream消息"><span>读取Stream消息</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>xread count <span class="token number">10</span> streams stream_key1 <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数说明：</p><ul><li><code>count 10</code>：表示读取的消息数量</li><li><code>streams stream_key1</code>：表示读取的stream名称，可以指定多个stream，用空格分隔。如<code>streams stream_key1 stream_key2</code></li><li><code>0</code>：表示要读取消息的起始ID，读取该起始ID之后的消息。另外有几个特殊值，如这里的<code>0</code>，代表从最旧的消息开始读(包括最旧的那条)</li></ul><h3 id="阻塞读取stream消息" tabindex="-1"><a class="header-anchor" href="#阻塞读取stream消息"><span>阻塞读取Stream消息</span></a></h3><p>阻塞读取时，若读取不到内容，则阻塞等待；若读取到消息或达到阻塞时间，则不再阻塞，如还需阻塞读取，需要再次调用</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>xread block <span class="token number">0</span> count <span class="token number">10</span> streams stream_key1 $
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>xread 如果不设置block参数，默认是非阻塞模式。</p></blockquote><p>参数说明：</p><ul><li><code>block 0</code>：block参数的单位是毫秒，block 0代表的是永远阻塞。</li><li><code>$</code>：表示是ID的一个特殊值，表示读取最新消息。<code>$</code>只有在阻塞模式中生效，非阻塞模式下，<code>$</code>无法读取到消息</li></ul>`,21),n=[s];function r(o,d){return t(),a("div",null,n)}const p=e(i,[["render",r],["__file","stream-command.html.vue"]]),h=JSON.parse('{"path":"/notebook/redis/streams/stream-command.html","title":"Stream 命令","lang":"zh-CN","frontmatter":{"title":"Stream 命令","author":null,"category":"Redis","tag":"Redis","date":"2024-01-25T00:00:00.000Z","description":"命令说明 XACK：结束Pending，将消息标记为\\"已处理\\" XADD：生成消息 XCLAIM：转移消息的归属权 XDEL：删除消息 XGROUP：消费组管理 XINFO：查看流和消费者组的相关信息 XLEN：消息队列长度 XPENDING：Pending列表，显示待处理消息的相关信息 XRANGE：获取消息队列中消息 XREAD：消费消息 XREA...","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/notebook/redis/streams/stream-command.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"Stream 命令"}],["meta",{"property":"og:description","content":"命令说明 XACK：结束Pending，将消息标记为\\"已处理\\" XADD：生成消息 XCLAIM：转移消息的归属权 XDEL：删除消息 XGROUP：消费组管理 XINFO：查看流和消费者组的相关信息 XLEN：消息队列长度 XPENDING：Pending列表，显示待处理消息的相关信息 XRANGE：获取消息队列中消息 XREAD：消费消息 XREA..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-26T17:48:20.000Z"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2024-01-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-26T17:48:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Stream 命令\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-26T17:48:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"命令说明","slug":"命令说明","link":"#命令说明","children":[]},{"level":2,"title":"QuickStart-无消费组","slug":"quickstart-无消费组","link":"#quickstart-无消费组","children":[{"level":3,"title":"创建Stream","slug":"创建stream","link":"#创建stream","children":[]},{"level":3,"title":"查看Stream信息","slug":"查看stream信息","link":"#查看stream信息","children":[]},{"level":3,"title":"读取Stream消息","slug":"读取stream消息","link":"#读取stream消息","children":[]},{"level":3,"title":"阻塞读取Stream消息","slug":"阻塞读取stream消息","link":"#阻塞读取stream消息","children":[]}]}],"git":{"createdTime":1711475300000,"updatedTime":1711475300000,"contributors":[{"name":"hollowlatte","email":"hollowlatte@outlook.com","commits":1}]},"readingTime":{"minutes":1.57,"words":471},"filePathRelative":"notebook/redis/streams/stream-command.md","localizedDate":"2024年1月25日","excerpt":"<h2>命令说明</h2>\\n<ul>\\n<li>XACK：结束Pending，将消息标记为\\"已处理\\"</li>\\n<li>XADD：生成消息</li>\\n<li>XCLAIM：转移消息的归属权</li>\\n<li>XDEL：删除消息</li>\\n<li>XGROUP：消费组管理</li>\\n<li>XINFO：查看流和消费者组的相关信息</li>\\n<li>XLEN：消息队列长度</li>\\n<li>XPENDING：Pending列表，显示待处理消息的相关信息</li>\\n<li>XRANGE：获取消息队列中消息</li>\\n<li>XREAD：消费消息</li>\\n<li>XREADGROUP：分组消费消息</li>\\n<li>XREVRANGE：逆序获取消息队列中消息</li>\\n<li>XTRIM：消息队列容量</li>\\n</ul>","autoDesc":true}');export{p as comp,h as data};
