const t=JSON.parse('{"key":"v-325c4767","path":"/practice-manual/elasticsearch/paginate-search/es-paginate-search.html","title":"ES分页查询","lang":"zh-CN","frontmatter":{"title":"ES分页查询","author":null,"category":"Elasticsearch","tag":"Elasticsearch","description":"官方文档 Paginate search results 分页方式对比 分页方式 简述 缺点 From&amp;Size 浅分页情况下，可以考虑使用； ● 默认大小限制 ● 深度分页情况下，性能较差 Scroll(官方不推荐) 基于历史快照和上一页的scroll_id，查询下一页； ● 快照比较占内存● 不适合实时搜索和跳页需求 Search After(官方推荐) 1. 需要排序，官方（5.6版本）推荐使用 _uid 作为排序字段和全局唯一值（注：不同版本的ES，官方文档有变动，请参考对应版本的文档。比如，7.x版本建议拷贝_id字段值到另外一个支持doc value的字段，用于作为排序字段）； 2. 通过实时cursor来规避耗时和占存储的性能问题，基于上一页的结果帮助检索下一页； 3. 使用search_after参数时，from的值必须为0或者-1 ● 需要排序 ● 不适合跳页需求","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/practice-manual/elasticsearch/paginate-search/es-paginate-search.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"ES分页查询"}],["meta",{"property":"og:description","content":"官方文档 Paginate search results 分页方式对比 分页方式 简述 缺点 From&amp;Size 浅分页情况下，可以考虑使用； ● 默认大小限制 ● 深度分页情况下，性能较差 Scroll(官方不推荐) 基于历史快照和上一页的scroll_id，查询下一页； ● 快照比较占内存● 不适合实时搜索和跳页需求 Search After(官方推荐) 1. 需要排序，官方（5.6版本）推荐使用 _uid 作为排序字段和全局唯一值（注：不同版本的ES，官方文档有变动，请参考对应版本的文档。比如，7.x版本建议拷贝_id字段值到另外一个支持doc value的字段，用于作为排序字段）； 2. 通过实时cursor来规避耗时和占存储的性能问题，基于上一页的结果帮助检索下一页； 3. 使用search_after参数时，from的值必须为0或者-1 ● 需要排序 ● 不适合跳页需求"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Elasticsearch"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ES分页查询\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"官方文档","slug":"官方文档","link":"#官方文档","children":[]},{"level":2,"title":"分页方式对比","slug":"分页方式对比","link":"#分页方式对比","children":[]}],"git":{},"readingTime":{"minutes":0.9,"words":270},"filePathRelative":"practice-manual/elasticsearch/paginate-search/es-paginate-search.md","excerpt":"<h2> 官方文档</h2>\\n<p><a href=\\"https://www.elastic.co/guide/en/elasticsearch/reference/current/paginate-search-results.html#paginate-search-results\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Paginate search results</a></p>\\n<h2> 分页方式对比</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>分页方式</th>\\n<th>简述</th>\\n<th>缺点</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>From&amp;Size</td>\\n<td>浅分页情况下，可以考虑使用；</td>\\n<td>● 默认大小限制<br> ● 深度分页情况下，性能较差</td>\\n</tr>\\n<tr>\\n<td>Scroll(官方不推荐)</td>\\n<td>基于历史快照和上一页的scroll_id，查询下一页；</td>\\n<td>● 快照比较占内存<br>● 不适合实时搜索和跳页需求</td>\\n</tr>\\n<tr>\\n<td>Search After(官方推荐)</td>\\n<td>1. 需要排序，官方（<code>5.6版本</code>）推荐使用 <strong>_uid</strong> 作为排序字段和全局唯一值（注：不同版本的ES，官方文档有变动，请参考对应版本的文档。比如，<code>7.x版本</code>建议拷贝<code>_id</code>字段值到另外一个支持<code>doc value</code>的字段，用于作为排序字段）； <br>2. 通过<strong>实时cursor</strong>来规避耗时和占存储的性能问题，基于上一页的结果帮助检索下一页； <br>3. 使用search_after参数时，from的值必须为0或者-1</td>\\n<td>● 需要排序<br> ● 不适合跳页需求</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{t as data};
