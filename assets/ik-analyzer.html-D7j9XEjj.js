import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,e as s}from"./app-BIdAApvj.js";const e={},p=s(`<h2 id="索引最大化分词-搜索智能分词" tabindex="-1"><a class="header-anchor" href="#索引最大化分词-搜索智能分词"><span>索引最大化分词，搜索智能分词</span></a></h2><p>索引时用ik_max_word，在搜索时用ik_smart。 这是常见的分词策略 ,可以应对大部分场景</p><h2 id="添加自定义分词" tabindex="-1"><a class="header-anchor" href="#添加自定义分词"><span>添加自定义分词</span></a></h2><p>自定义分词配置文件：</p><p>在ES的plugins目录下，<code>plugins-&gt;ik-&gt;config-&gt;IKAnalyzer.cfg.xml</code></p><p>该xml应该会有以下内容：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">properties</span> <span class="token name">SYSTEM</span> <span class="token string">&quot;http://java.sun.com/dtd/properties.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>comment</span><span class="token punctuation">&gt;</span></span>IK Analyzer 扩展配置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>comment</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ext_dict<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>custom1.dic;custom2.dic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ext_stopwords<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--用户可以在这里配置远程扩展字典 --&gt;</span>
    <span class="token comment">&lt;!-- &lt;entry key=&quot;remote_ext_dict&quot;&gt;words_location&lt;/entry&gt; --&gt;</span>
    <span class="token comment">&lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span>
    <span class="token comment">&lt;!-- &lt;entry key=&quot;remote_ext_stopwords&quot;&gt;words_location&lt;/entry&gt; --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如，我在<code> &lt;entry key=&quot;ext_dict&quot;&gt;</code>处配置了两个自定义的词库custom1.dic和custom2.dic，多个词库用分号分隔</p><p>配置了之后，在<code>IKAnalyzer.cfg.xml</code>的同级目录下就要创建custom1.dic和custom2.dic两个词库了</p><p>词库内就写入想要的词，格式如下：</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>词语1
词语2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[p];function l(c,i){return a(),t("div",null,o)}const k=n(e,[["render",l],["__file","ik-analyzer.html.vue"]]),m=JSON.parse('{"path":"/practice-manual/elasticsearch/analyzer/ik-analyzer.html","title":"ik分词使用","lang":"zh-CN","frontmatter":{"title":"ik分词使用","author":null,"category":"Elasticsearch","tag":"Elasticsearch","description":"索引最大化分词，搜索智能分词 索引时用ik_max_word，在搜索时用ik_smart。 这是常见的分词策略 ,可以应对大部分场景 添加自定义分词 自定义分词配置文件： 在ES的plugins目录下，plugins->ik->config->IKAnalyzer.cfg.xml 该xml应该会有以下内容： 例如，我在 <entry key=\\"ext_...","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/practice-manual/elasticsearch/analyzer/ik-analyzer.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"ik分词使用"}],["meta",{"property":"og:description","content":"索引最大化分词，搜索智能分词 索引时用ik_max_word，在搜索时用ik_smart。 这是常见的分词策略 ,可以应对大部分场景 添加自定义分词 自定义分词配置文件： 在ES的plugins目录下，plugins->ik->config->IKAnalyzer.cfg.xml 该xml应该会有以下内容： 例如，我在 <entry key=\\"ext_..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-24T07:11:51.000Z"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Elasticsearch"}],["meta",{"property":"article:modified_time","content":"2024-03-24T07:11:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ik分词使用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-24T07:11:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"索引最大化分词，搜索智能分词","slug":"索引最大化分词-搜索智能分词","link":"#索引最大化分词-搜索智能分词","children":[]},{"level":2,"title":"添加自定义分词","slug":"添加自定义分词","link":"#添加自定义分词","children":[]}],"git":{"createdTime":1711264311000,"updatedTime":1711264311000,"contributors":[{"name":"hollowlatte","email":"hollowlatte@outlook.com","commits":1}]},"readingTime":{"minutes":0.92,"words":277},"filePathRelative":"practice-manual/elasticsearch/analyzer/ik-analyzer.md","localizedDate":"2024年3月24日","excerpt":"<h2>索引最大化分词，搜索智能分词</h2>\\n<p>索引时用ik_max_word，在搜索时用ik_smart。 这是常见的分词策略 ,可以应对大部分场景</p>\\n<h2>添加自定义分词</h2>\\n<p>自定义分词配置文件：</p>\\n<p>在ES的plugins目录下，<code>plugins-&gt;ik-&gt;config-&gt;IKAnalyzer.cfg.xml</code></p>\\n<p>该xml应该会有以下内容：</p>\\n<div class=\\"language-xml\\" data-ext=\\"xml\\" data-title=\\"xml\\"><pre class=\\"language-xml\\"><code><span class=\\"token prolog\\">&lt;?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?&gt;</span>\\n<span class=\\"token doctype\\"><span class=\\"token punctuation\\">&lt;!</span><span class=\\"token doctype-tag\\">DOCTYPE</span> <span class=\\"token name\\">properties</span> <span class=\\"token name\\">SYSTEM</span> <span class=\\"token string\\">\\"http://java.sun.com/dtd/properties.dtd\\"</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>properties</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>comment</span><span class=\\"token punctuation\\">&gt;</span></span>IK Analyzer 扩展配置<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>comment</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token comment\\">&lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>entry</span> <span class=\\"token attr-name\\">key</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>ext_dict<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>custom1.dic;custom2.dic<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>entry</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token comment\\">&lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>entry</span> <span class=\\"token attr-name\\">key</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>ext_stopwords<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>entry</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token comment\\">&lt;!--用户可以在这里配置远程扩展字典 --&gt;</span>\\n    <span class=\\"token comment\\">&lt;!-- &lt;entry key=\\"remote_ext_dict\\"&gt;words_location&lt;/entry&gt; --&gt;</span>\\n    <span class=\\"token comment\\">&lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span>\\n    <span class=\\"token comment\\">&lt;!-- &lt;entry key=\\"remote_ext_stopwords\\"&gt;words_location&lt;/entry&gt; --&gt;</span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>properties</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,m as data};
