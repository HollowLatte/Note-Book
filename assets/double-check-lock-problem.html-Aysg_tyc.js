const n=JSON.parse('{"key":"v-70b889dd","path":"/notebook/java/concurrence/double-check-lock-problem.html","title":"DCL双重检查锁问题","lang":"zh-CN","frontmatter":{"title":"DCL双重检查锁问题","author":null,"category":"Java","tag":"Java","date":"2024-03-06T00:00:00.000Z","description":"有一篇关于该问题的论文：The \\"Double-Checked Locking is Broken\\" Declaration 双重检查锁 未使用volatile的DCL实现： public class DoubleCheckLockSingleton { private static DoubleCheckLockSingleton instance; private DoubleCheckLockSingleton() { } public static DoubleCheckLockSingleton getInstance() { if (instance == null) { synchronized (DoubleCheckLockSingleton.class) { if (instance == null) { instance = new DoubleCheckLockSingleton(); } } } return instance; } }","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/notebook/java/concurrence/double-check-lock-problem.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"DCL双重检查锁问题"}],["meta",{"property":"og:description","content":"有一篇关于该问题的论文：The \\"Double-Checked Locking is Broken\\" Declaration 双重检查锁 未使用volatile的DCL实现： public class DoubleCheckLockSingleton { private static DoubleCheckLockSingleton instance; private DoubleCheckLockSingleton() { } public static DoubleCheckLockSingleton getInstance() { if (instance == null) { synchronized (DoubleCheckLockSingleton.class) { if (instance == null) { instance = new DoubleCheckLockSingleton(); } } } return instance; } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2024-03-06T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DCL双重检查锁问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-06T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"双重检查锁","slug":"双重检查锁","link":"#双重检查锁","children":[]},{"level":2,"title":"双重检查锁延迟初始化问题","slug":"双重检查锁延迟初始化问题","link":"#双重检查锁延迟初始化问题","children":[]},{"level":2,"title":"解决延迟初始化问题","slug":"解决延迟初始化问题","link":"#解决延迟初始化问题","children":[]}],"git":{},"readingTime":{"minutes":1.35,"words":405},"filePathRelative":"notebook/java/concurrence/double-check-lock-problem.md","localizedDate":"2024年3月6日","excerpt":"<p>有一篇关于该问题的论文：<a href=\\"http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">The \\"Double-Checked Locking is Broken\\" Declaration</a></p>\\n<h2> 双重检查锁</h2>\\n<p>未使用volatile的DCL实现：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">DoubleCheckLockSingleton</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">DoubleCheckLockSingleton</span> instance<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">DoubleCheckLockSingleton</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">DoubleCheckLockSingleton</span> <span class=\\"token function\\">getInstance</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>instance <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">synchronized</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">DoubleCheckLockSingleton</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>instance <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                    instance <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">DoubleCheckLockSingleton</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> instance<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
