import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as s,o as i,c as r,a as n,d as e,b as c,e as o}from"./app-R-jbemKs.js";const p={},u=o('<h2 id="问题现象" tabindex="-1"><a class="header-anchor" href="#问题现象" aria-hidden="true">#</a> 问题现象</h2><p>引入rocketmq-spring-boot-starter依赖后，配置了RocketMQ相关连接参数后，启动SpringBoot失败，异常信息是：缺失<code>RocketMQTemplate</code> 的Bean</p><h2 id="可能原因" tabindex="-1"><a class="header-anchor" href="#可能原因" aria-hidden="true">#</a> 可能原因</h2><p>以为需要自己手动配置RocketMQTemplate的Bean</p><h2 id="原因分析" tabindex="-1"><a class="header-anchor" href="#原因分析" aria-hidden="true">#</a> 原因分析</h2><p>排查步骤：</p>',6),d=n("li",null,"当使用SpringBoot3以下版本时是正常的，比如SpringBoot2.7版本，引入依赖配置参数后即可正常启动。因此，应该是SpringBoot3版本某些特性导致的",-1),l={href:"https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-3.0-Migration-Guide#auto-configuration-files",target:"_blank",rel:"noopener noreferrer"},g=o(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Spring Boot 2.7 introduced a new META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports file
for registering auto-configurations, while maintaining backwards compatibility with registration in spring.factories.
With this release, support for registering auto-configurations in spring.factories using the
org.springframework.boot.autoconfigure.EnableAutoConfiguration key has been removed in favor of the imports file. Other
entries in spring.factories under other keys are unaffected.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),m=n("li",null,[e("上面文档提到的，SpringBoot2.7引入了一个新的imports文件来注册自动配置，并且保持了原本spring.factories的注册自动配置，即两种方式都可以。 但是SpringBoot3中删除了对spring.factories的注册自动配置的支持。所以翻看 rocketmq-spring-boot-starter 具体的包，发现确实只有"),n("code",null,"spring.factories"),e(" 文件，而没有"),n("code",null,"META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports"),e(" 文件")],-1),f=o(`<h2 id="问题原因" tabindex="-1"><a class="header-anchor" href="#问题原因" aria-hidden="true">#</a> 问题原因</h2><p>引入的 <code>rocketmq-spring-boot-starter</code> 依赖版本为2.2.3，其中并没有很好地支持SpringBoot3，只带了<code>spring.factories</code> 注册自动配置的方式，而SpringBoot3只支持通过<code>META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports</code> 文件来注册自动配置</p><p><strong>简单来说，就是SpringBoot3的注册自动配置文件的方式变了，而2.2.3版本的RocketMQ starter还未支持</strong></p><h2 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h2><p>在代码的<code>resource</code>目录下创建<code>META-INF/spring</code> 这两级目录，再创建名称为<code>org.springframework.boot.autoconfigure.AutoConfiguration.imports</code>的文件，内容如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span>RocketMQAutoConfiguration</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>上面的其实等效于SpringBoot3以前的<code>META-INF/spring.factories</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span>EnableAutoConfiguration</span><span class="token operator">=</span>\\
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span>RocketMQAutoConfiguration</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>`,7);function h(k,b){const a=s("ExternalLinkIcon");return i(),r("div",null,[u,n("ol",null,[d,n("li",null,[e("查看SpringBoot3官方文档，在Migration-Guide中找到一个关键的说明： "),n("a",l,[e("Spring-Boot-3.0-Migration-Guide"),c(a)]),g]),m]),f])}const B=t(p,[["render",h],["__file","springboot3-rocketmq-no-bean.html.vue"]]);export{B as default};
