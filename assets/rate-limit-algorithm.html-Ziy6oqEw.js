const t=JSON.parse('{"key":"v-4322c3f6","path":"/notebook/high-availability/rate-limit-algorithm.html","title":"限流算法","lang":"zh-CN","frontmatter":{"title":"限流算法","author":null,"category":"HA","tag":"HA","description":"固定窗口 固定窗口限流算法（Fixed Window Rate Limiting Algorithm）是一种最简单的限流算法，其原理是在固定时间窗口(单位时间) 内限制请求的数量。该算法将时间分成固定的窗口，并在每个窗口内限制请求的数量。具体来说，算法将请求按照时间顺序放入时间窗口中，并计算该时间窗口内的请求数量，如果请求数量超出了限制，则拒绝该请求。 优点：固定窗口算法非常简单，易于实现和理解。 缺点：存在明显的临界问题，比如: 假设限流阀值为5个请求，单位时间窗口是1s,如果我们在单位时间内的前0.8-1s和1-1.2s，分别并发5个请求。虽然都没有超过阀值，但是如果算0.8-1.2s,则并发数高达10，已经超过单位时间1s不超过5阀值的定义啦。","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/notebook/high-availability/rate-limit-algorithm.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"限流算法"}],["meta",{"property":"og:description","content":"固定窗口 固定窗口限流算法（Fixed Window Rate Limiting Algorithm）是一种最简单的限流算法，其原理是在固定时间窗口(单位时间) 内限制请求的数量。该算法将时间分成固定的窗口，并在每个窗口内限制请求的数量。具体来说，算法将请求按照时间顺序放入时间窗口中，并计算该时间窗口内的请求数量，如果请求数量超出了限制，则拒绝该请求。 优点：固定窗口算法非常简单，易于实现和理解。 缺点：存在明显的临界问题，比如: 假设限流阀值为5个请求，单位时间窗口是1s,如果我们在单位时间内的前0.8-1s和1-1.2s，分别并发5个请求。虽然都没有超过阀值，但是如果算0.8-1.2s,则并发数高达10，已经超过单位时间1s不超过5阀值的定义啦。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"HA"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"限流算法\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"固定窗口","slug":"固定窗口","link":"#固定窗口","children":[]},{"level":2,"title":"滑动窗口","slug":"滑动窗口","link":"#滑动窗口","children":[]},{"level":2,"title":"漏桶","slug":"漏桶","link":"#漏桶","children":[]},{"level":2,"title":"令牌桶","slug":"令牌桶","link":"#令牌桶","children":[]}],"git":{},"readingTime":{"minutes":4.03,"words":1209},"filePathRelative":"notebook/high-availability/rate-limit-algorithm.md","excerpt":"<h2> 固定窗口</h2>\\n<p>固定窗口限流算法（Fixed Window Rate Limiting Algorithm）是一种最简单的限流算法，其原理是在固定时间窗口(单位时间)\\n内限制请求的数量。该算法将时间分成固定的窗口，并在每个窗口内限制请求的数量。具体来说，算法将请求按照时间顺序放入时间窗口中，并计算该时间窗口内的请求数量，如果请求数量超出了限制，则拒绝该请求。</p>\\n<ul>\\n<li>优点：固定窗口算法非常简单，易于实现和理解。</li>\\n<li>缺点：存在明显的临界问题，比如:\\n假设限流阀值为5个请求，单位时间窗口是1s,如果我们在单位时间内的前0.8-1s和1-1.2s，分别并发5个请求。虽然都没有超过阀值，但是如果算0.8-1.2s,则并发数高达10，已经超过单位时间1s不超过5阀值的定义啦。</li>\\n</ul>","autoDesc":true}');export{t as data};
