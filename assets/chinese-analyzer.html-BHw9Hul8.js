import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as r,e as i}from"./app-R-jbemKs.js";const d={},h=i('<h2 id="ik分词" tabindex="-1"><a class="header-anchor" href="#ik分词" aria-hidden="true">#</a> ik分词</h2><h2 id="分词模式" tabindex="-1"><a class="header-anchor" href="#分词模式" aria-hidden="true">#</a> 分词模式</h2><p>ik目前就两种分词模式ik_smart、ik_max_word</p><h3 id="ik-smart" tabindex="-1"><a class="header-anchor" href="#ik-smart" aria-hidden="true">#</a> ik_smart</h3><p>最细粒度分词模式，这种分词模式会尽可能地将句子划分成最小的词汇单元，例如“中华人民共和国成立了”会被划分成“中华人民共和国”、“成立”、“了”三个词汇。</p><h3 id="ik-max-word" tabindex="-1"><a class="header-anchor" href="#ik-max-word" aria-hidden="true">#</a> ik_max_word</h3><p>最大化分词模式，这种分词模式会将整个句子进行分词，包括所有可能的词汇，例如“中华人民共和国成立了”会被划分成“中华”、“中华人民”、“中华人民共和国”、“人民”、“共和”、“共和国”、“国成”、“成立”、“了”九个词汇。</p><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践" aria-hidden="true">#</a> 最佳实践</h2><p>索引分词时用ik_max_word，在搜索时用ik_smart。 即：索引时最大化的将文章内容分词，搜索时更精确的搜索到想要的结果。</p><h2 id="ik分词优化" tabindex="-1"><a class="header-anchor" href="#ik分词优化" aria-hidden="true">#</a> ik分词优化</h2><h3 id="修改ik源码" tabindex="-1"><a class="header-anchor" href="#修改ik源码" aria-hidden="true">#</a> 修改ik源码</h3><p>ik分词器的这两种模式在生产上用会有一个问题，就是相同的文本在max_word模式下分出来的词并不一定会包含smart模式下分出的词，这种情况就会导致搜不出来bad case。建议修改源码将max_word的分词和smart的分词合并到set里建索引</p><p>ik分词器源码里只有智能非智能两种，两种不能一起去使用。一起使用的话，智能和非智能分出来的效果不一致。会导致很多搜索无结果的case</p>',13),t=[h];function s(n,c){return e(),r("div",null,t)}const k=a(d,[["render",s],["__file","chinese-analyzer.html.vue"]]);export{k as default};
