const e=JSON.parse('{"key":"v-2cffa9ed","path":"/notebook/netty/common-classes.html","title":"常见类","lang":"zh-CN","frontmatter":{"title":"常见类","author":null,"category":"Netty","tag":"Netty","description":"常见类及作用 Netty作为Java中使用广泛的NIO框架,其主要类和作用如下： Channel：对套接字连接的抽象,用于处理连接的生命周期事件。 ChannelHandler：用于处理Channel上的IO事件及数据处理逻辑,分为入站、出站Handler。 ChannelPipeline：存放ChannelHandler的链,用于处理或拦截Channel的IO事件和数据。 EventLoop：处理IO操作的线程,一个EventLoop可以处理多个Channel。 EventLoopGroup：一组EventLoop,用于为Channel分配EventLoop。 ChannelFuture：异步IO操作的结果容器,可以添加回调函数。 Bootstrap：客户端启动助手类,用于连接服务器。 ServerBootstrap：服务器启动引导类,用于绑定端口启动服务器。 ByteBuf：Netty的数据容器,用于缓冲读写的数据。","head":[["meta",{"property":"og:url","content":"https://hollowlatte.github.io/Note-Book/Note-Book/notebook/netty/common-classes.html"}],["meta",{"property":"og:site_name","content":"Note-Book"}],["meta",{"property":"og:title","content":"常见类"}],["meta",{"property":"og:description","content":"常见类及作用 Netty作为Java中使用广泛的NIO框架,其主要类和作用如下： Channel：对套接字连接的抽象,用于处理连接的生命周期事件。 ChannelHandler：用于处理Channel上的IO事件及数据处理逻辑,分为入站、出站Handler。 ChannelPipeline：存放ChannelHandler的链,用于处理或拦截Channel的IO事件和数据。 EventLoop：处理IO操作的线程,一个EventLoop可以处理多个Channel。 EventLoopGroup：一组EventLoop,用于为Channel分配EventLoop。 ChannelFuture：异步IO操作的结果容器,可以添加回调函数。 Bootstrap：客户端启动助手类,用于连接服务器。 ServerBootstrap：服务器启动引导类,用于绑定端口启动服务器。 ByteBuf：Netty的数据容器,用于缓冲读写的数据。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Hollow-Latte"}],["meta",{"property":"article:tag","content":"Netty"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见类\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hollow-Latte\\",\\"url\\":\\"https://hollowlatte.github.io/Note-Book\\"}]}"]]},"headers":[{"level":2,"title":"常见类及作用","slug":"常见类及作用","link":"#常见类及作用","children":[]},{"level":2,"title":"常见Encoder","slug":"常见encoder","link":"#常见encoder","children":[{"level":3,"title":"MessageToByteEncoder","slug":"messagetobyteencoder","link":"#messagetobyteencoder","children":[]}]},{"level":2,"title":"常见Decoder","slug":"常见decoder","link":"#常见decoder","children":[{"level":3,"title":"ByteToMessageDecoder","slug":"bytetomessagedecoder","link":"#bytetomessagedecoder","children":[]},{"level":3,"title":"LengthFieldBasedFrameDecoder","slug":"lengthfieldbasedframedecoder","link":"#lengthfieldbasedframedecoder","children":[]}]},{"level":2,"title":"Handler","slug":"handler","link":"#handler","children":[{"level":3,"title":"ChannelInboundHandlerAdapter","slug":"channelinboundhandleradapter","link":"#channelinboundhandleradapter","children":[]}]}],"git":{},"readingTime":{"minutes":2.77,"words":830},"filePathRelative":"notebook/netty/common-classes.md","excerpt":"<h2> 常见类及作用</h2>\\n<p>Netty作为Java中使用广泛的NIO框架,其主要类和作用如下：</p>\\n<ul>\\n<li><strong>Channel</strong>：对套接字连接的抽象,用于处理连接的生命周期事件。</li>\\n<li><strong>ChannelHandler</strong>：用于处理Channel上的IO事件及数据处理逻辑,分为入站、出站Handler。</li>\\n<li><strong>ChannelPipeline</strong>：存放ChannelHandler的链,用于处理或拦截Channel的IO事件和数据。</li>\\n<li><strong>EventLoop</strong>：处理IO操作的线程,一个EventLoop可以处理多个Channel。</li>\\n<li><strong>EventLoopGroup</strong>：一组EventLoop,用于为Channel分配EventLoop。</li>\\n<li><strong>ChannelFuture</strong>：异步IO操作的结果容器,可以添加回调函数。</li>\\n<li><strong>Bootstrap</strong>：客户端启动助手类,用于连接服务器。</li>\\n<li><strong>ServerBootstrap</strong>：服务器启动引导类,用于绑定端口启动服务器。</li>\\n<li><strong>ByteBuf</strong>：Netty的数据容器,用于缓冲读写的数据。</li>\\n</ul>","autoDesc":true}');export{e as data};
