import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as t,e as o}from"./app-R-jbemKs.js";const c={},n=o('<h2 id="为什么要自己定义sds" tabindex="-1"><a class="header-anchor" href="#为什么要自己定义sds" aria-hidden="true">#</a> 为什么要自己定义SDS？</h2><p>SDS（Simple Dynamic Strings），即简单动态字符串。第一就是要支持任意字符的存储，第二就是各种操作需要高效。</p><p>C语言中，字符串是通过字符数组实现的，为了表示字符串的结束，他会在字符数组的最后一个字符处记录<code>\\0</code></p><p><strong>这样实现的字符串中就不能保存任意内容了，至少<code>\\0</code>就不行</strong></p><p>C中的字符串以\\0作为识别字符串结束的方式，所以他的字符串长度判断、字符串追加等操作，都需要从头开始遍历，一直遍历到\\0的时候再返回长度或者做追加。这就使得字符串相关的操作效率都很低。</p><p>在用字符数组表示字符串的同时，在这个字符串中增加一个表示分配给该字符数组的总长度的alloc字段， 和一个表示字符串现有长度的len字段。这样在获取长度的时候就不依赖\\0了，直接返回len的值就行了。</p>',6),r=[n];function a(d,i){return s(),t("div",null,r)}const l=e(c,[["render",a],["__file","string-sds.html.vue"]]);export{l as default};
