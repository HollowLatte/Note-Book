import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as e,e as n}from"./app-R-jbemKs.js";const t={},i=n(`<h2 id="不要使用keys" tabindex="-1"><a class="header-anchor" href="#不要使用keys" aria-hidden="true">#</a> 不要使用keys</h2><p>KEYS 命令在 Redis 中是阻塞的，它会一次性返回与给定模式匹配的所有键。如果 Redis 数据库非常大，或者匹配的键数量庞大，使用 KEYS 命令可能会阻塞服务器并导致性能问题。此外，由于 KEYS 命令的执行是阻塞的，其他客户端的请求也会被延迟。</p><h2 id="推荐使用scan" tabindex="-1"><a class="header-anchor" href="#推荐使用scan" aria-hidden="true">#</a> 推荐使用scan</h2><p>SCAN 命令使用游标方式迭代 Redis 键空间，允许逐步获取匹配模式的键。这样可以将工作分散到多个迭代中，减少对服务器的阻塞时间，并且不会导致性能问题。 使用 SCAN 命令可以更好地处理大型数据库和大量键的情况，并且对于生产环境更加安全。</p><p>语法如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>SCAN cursor <span class="token punctuation">[</span>MATCH pattern<span class="token punctuation">]</span> <span class="token punctuation">[</span>COUNT count<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>SCAN <span class="token number">0</span> match <span class="token string">&quot;cache:*&quot;</span> count <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>SCAN 命令将返回一个包含两个元素的数组： 第一个元素是下一个迭代的游标，第二个元素是与pattern匹配的键。 可以使用返回的游标来进行下一次迭代，直到返回的游标为 0，表示迭代完成。</p><h2 id="scan的问题" tabindex="-1"><a class="header-anchor" href="#scan的问题" aria-hidden="true">#</a> scan的问题</h2><ul><li><p><strong>可能会产生重复键</strong>：在某些情况下，SCAN 命令可能会返回重复的键。这是因为在迭代过程中有新的键被添加或删除，而新键的添加或删除可能导致某些键被返回多次。</p></li><li><p><strong>迭代过程可能不是实时的</strong>：SCAN 命令使用游标方式迭代键空间，这意味着在多次迭代之间可能会有新的键被添加或删除。因此，如果在迭代过程中有新的键被添加或删除，那么这些新键可能会在当前迭代中被忽略，需要等到下一次迭代才能获取到。这可能导致在某些情况下无法实时获取到最新的键集合。</p></li><li><p><strong>可能会产生重复键</strong>：在某些情况下，SCAN 命令可能会返回重复的键。这是因为在迭代过程中有新的键被添加或删除，而新键的添加或删除可能导致某些键被返回多次。为了解决这个问题，应用程序需要在客户端端进行去重操作。</p></li></ul>`,11),c=[i];function r(d,o){return s(),e("div",null,c)}const u=a(t,[["render",r],["__file","find-key.html.vue"]]);export{u as default};
